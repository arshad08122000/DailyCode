#include<bits/stdc++.h>

using namespace std;


class node{
    public:
    int data;
    node *left;
    node *right;
    node(int x)
    {
        data=x;
        left=NULL;
        right=NULL;
    } 
};

bool aremirror(node *l,node *r)
{
   
    if(!l||!r) 
    {
        return (l==r);
    }


    if(l->data!=r->data)
    {
        return false;
    }
    


    return ( aremirror(l->left,r->right) && aremirror(l->right,r->left) );

}



bool sys(node *ro)
{
    if(!ro)
    {
        return true;
    }
    else
    {
        return aremirror(ro->left,ro->right);
    }
}


int main()
{
  node *root=NULL;
  root=new node(1);  
  root->left=new node(2);
  root->right=new node(2);
  root->left->left=new node(3);
//   root->left->right=new node(4);
//   root->right->left=new node(4);
  root->right->right=new node(3);

  if(sys(root))
  {
      cout<<"tree is a mirror";
  }
  else
  {
      cout<<"not a mirror";
  }

}

//output-
// tree is a mirror?