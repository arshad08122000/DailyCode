#include <bits/stdc++.h>
using namespace std;
 

class node{
    public:
    int data;
    node* next;
};


void push(node** head,int data)
{
    
    node* newn=new node();
    if(head==NULL)
    {
        newn->data=data;
        newn->next=NULL;
        *head=newn;
        
    }
    else
    {
        newn->data=data;
        newn->next=*head;
        *head=newn;
        
    }
}


void printt(node* head) 
{
    while(head!=NULL)
    {
        cout<<head->data<<" ";
        head=head->next;
    }
}


void check(node** start)
{
    
    struct node *ptr1;
    ptr1 = *start;
 
    /* Pick elements one by one */
    while (ptr1 != NULL && ptr1->next != NULL) {
        node* ptr2;
        ptr2 = ptr1;

 
        /* Compare the picked element with rest
           of the elements */
        while (ptr2->next != NULL) {
            /* If duplicate then delete it */
            if (ptr1->data == ptr2->next->data) {
                node* dup;
                /* sequence of steps is important here */
                dup = ptr2->next;
                ptr2->next = ptr2->next->next;
                
            }
            else /* This is tricky */
                ptr2 = ptr2->next;
        }
        ptr1 = ptr1->next;
    }
}
    


int main()
{
     
    // Start with the empty list
    int arr[13]={1,1,4,1,4,3,4,1,2,5,8,1,4};
    node* head=NULL;
    
    


    for(int i=0;i<13;i++)
    {
        
        push(&head,arr[i]);  
    }
    check(&head);

    printt(head);
    
    
}